import TypedEmitter from 'typed-emitter';
import { TradingViewAPI } from './TradingViewAPI';
import { TickerData } from './interfaces/TickerData';
type MessageEvents = {
    newListener: () => void;
    update: (tickerData: TickerData) => void;
};
declare const TickerSubscription_base: new () => TypedEmitter<MessageEvents>;
export declare class TickerSubscription extends TickerSubscription_base {
    simpleOrProName: string;
    due: number;
    private api;
    private tickerData;
    destroyed: boolean;
    constructor(api: TradingViewAPI, simpleOrProName: string);
    updateData(tickerDataPatch: TickerData): void;
    fetch(): Promise<TickerData>;
    get canBeDestroyed(): boolean;
    private refreshDue;
}
export {};
//# sourceMappingURL=TickerSubscription.d.ts.map